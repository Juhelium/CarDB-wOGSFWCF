//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testi.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/uyjk")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auto", Namespace="http://schemas.datacontract.org/2004/07/uyjk")]
    [System.SerializableAttribute()]
    public partial class Auto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HintaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MalliField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MerkkiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MittarilukemaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MottoritilaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PvmField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fuel {
            get {
                return this.FuelField;
            }
            set {
                if ((this.FuelField.Equals(value) != true)) {
                    this.FuelField = value;
                    this.RaisePropertyChanged("Fuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Hinta {
            get {
                return this.HintaField;
            }
            set {
                if ((this.HintaField.Equals(value) != true)) {
                    this.HintaField = value;
                    this.RaisePropertyChanged("Hinta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Malli {
            get {
                return this.MalliField;
            }
            set {
                if ((this.MalliField.Equals(value) != true)) {
                    this.MalliField = value;
                    this.RaisePropertyChanged("Malli");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Merkki {
            get {
                return this.MerkkiField;
            }
            set {
                if ((this.MerkkiField.Equals(value) != true)) {
                    this.MerkkiField = value;
                    this.RaisePropertyChanged("Merkki");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mittarilukema {
            get {
                return this.MittarilukemaField;
            }
            set {
                if ((this.MittarilukemaField.Equals(value) != true)) {
                    this.MittarilukemaField = value;
                    this.RaisePropertyChanged("Mittarilukema");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Mottoritila {
            get {
                return this.MottoritilaField;
            }
            set {
                if ((this.MottoritilaField.Equals(value) != true)) {
                    this.MottoritilaField = value;
                    this.RaisePropertyChanged("Mottoritila");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Pvm {
            get {
                return this.PvmField;
            }
            set {
                if ((this.PvmField.Equals(value) != true)) {
                    this.PvmField = value;
                    this.RaisePropertyChanged("Pvm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Merkki", Namespace="http://schemas.datacontract.org/2004/07/uyjk")]
    [System.SerializableAttribute()]
    public partial class Merkki : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValmistajaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Valmistaja {
            get {
                return this.ValmistajaField;
            }
            set {
                if ((object.ReferenceEquals(this.ValmistajaField, value) != true)) {
                    this.ValmistajaField = value;
                    this.RaisePropertyChanged("Valmistaja");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Malli", Namespace="http://schemas.datacontract.org/2004/07/uyjk")]
    [System.SerializableAttribute()]
    public partial class Malli : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MalliIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MallinameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MerkkiIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MalliId {
            get {
                return this.MalliIdField;
            }
            set {
                if ((this.MalliIdField.Equals(value) != true)) {
                    this.MalliIdField = value;
                    this.RaisePropertyChanged("MalliId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Malliname {
            get {
                return this.MallinameField;
            }
            set {
                if ((object.ReferenceEquals(this.MallinameField, value) != true)) {
                    this.MallinameField = value;
                    this.RaisePropertyChanged("Malliname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MerkkiId {
            get {
                return this.MerkkiIdField;
            }
            set {
                if ((this.MerkkiIdField.Equals(value) != true)) {
                    this.MerkkiIdField = value;
                    this.RaisePropertyChanged("MerkkiId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="polttoaine", Namespace="http://schemas.datacontract.org/2004/07/uyjk")]
    [System.SerializableAttribute()]
    public partial class polttoaine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FuelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FuelId {
            get {
                return this.FuelIdField;
            }
            set {
                if ((this.FuelIdField.Equals(value) != true)) {
                    this.FuelIdField = value;
                    this.RaisePropertyChanged("FuelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelName {
            get {
                return this.FuelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelNameField, value) != true)) {
                    this.FuelNameField = value;
                    this.RaisePropertyChanged("FuelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vari", Namespace="http://schemas.datacontract.org/2004/07/uyjk")]
    [System.SerializableAttribute()]
    public partial class vari : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorId {
            get {
                return this.ColorIdField;
            }
            set {
                if ((this.ColorIdField.Equals(value) != true)) {
                    this.ColorIdField = value;
                    this.RaisePropertyChanged("ColorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorName {
            get {
                return this.ColorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorNameField, value) != true)) {
                    this.ColorNameField = value;
                    this.RaisePropertyChanged("ColorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        testi.ServiceReference1.CompositeType GetDataUsingDataContract(testi.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<testi.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(testi.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelCar", ReplyAction="http://tempuri.org/IService1/DelCarResponse")]
        int DelCar(int carid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelCar", ReplyAction="http://tempuri.org/IService1/DelCarResponse")]
        System.Threading.Tasks.Task<int> DelCarAsync(int carid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/saveAutoIntoDatabase", ReplyAction="http://tempuri.org/IService1/saveAutoIntoDatabaseResponse")]
        int saveAutoIntoDatabase(testi.ServiceReference1.Auto newAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/saveAutoIntoDatabase", ReplyAction="http://tempuri.org/IService1/saveAutoIntoDatabaseResponse")]
        System.Threading.Tasks.Task<int> saveAutoIntoDatabaseAsync(testi.ServiceReference1.Auto newAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllAutoMakersFromDatabase1", ReplyAction="http://tempuri.org/IService1/getAllAutoMakersFromDatabase1Response")]
        testi.ServiceReference1.Merkki[] getAllAutoMakersFromDatabase1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllAutoMakersFromDatabase1", ReplyAction="http://tempuri.org/IService1/getAllAutoMakersFromDatabase1Response")]
        System.Threading.Tasks.Task<testi.ServiceReference1.Merkki[]> getAllAutoMakersFromDatabase1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAutoModelsByMakerId", ReplyAction="http://tempuri.org/IService1/getAutoModelsByMakerIdResponse")]
        testi.ServiceReference1.Malli[] getAutoModelsByMakerId(int makerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAutoModelsByMakerId", ReplyAction="http://tempuri.org/IService1/getAutoModelsByMakerIdResponse")]
        System.Threading.Tasks.Task<testi.ServiceReference1.Malli[]> getAutoModelsByMakerIdAsync(int makerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAutoFuels", ReplyAction="http://tempuri.org/IService1/GetAutoFuelsResponse")]
        testi.ServiceReference1.polttoaine[] GetAutoFuels(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAutoFuels", ReplyAction="http://tempuri.org/IService1/GetAutoFuelsResponse")]
        System.Threading.Tasks.Task<testi.ServiceReference1.polttoaine[]> GetAutoFuelsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAutoColors", ReplyAction="http://tempuri.org/IService1/GetAutoColorsResponse")]
        testi.ServiceReference1.vari[] GetAutoColors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAutoColors", ReplyAction="http://tempuri.org/IService1/GetAutoColorsResponse")]
        System.Threading.Tasks.Task<testi.ServiceReference1.vari[]> GetAutoColorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNextAuto", ReplyAction="http://tempuri.org/IService1/GetNextAutoResponse")]
        testi.ServiceReference1.Auto GetNextAuto(int carid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNextAuto", ReplyAction="http://tempuri.org/IService1/GetNextAutoResponse")]
        System.Threading.Tasks.Task<testi.ServiceReference1.Auto> GetNextAutoAsync(int carid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetCount", ReplyAction="http://tempuri.org/IService1/SetCountResponse")]
        int SetCount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetCount", ReplyAction="http://tempuri.org/IService1/SetCountResponse")]
        System.Threading.Tasks.Task<int> SetCountAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPrevious", ReplyAction="http://tempuri.org/IService1/GetPreviousResponse")]
        testi.ServiceReference1.Auto GetPrevious(int carid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPrevious", ReplyAction="http://tempuri.org/IService1/GetPreviousResponse")]
        System.Threading.Tasks.Task<testi.ServiceReference1.Auto> GetPreviousAsync(int carid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : testi.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<testi.ServiceReference1.IService1>, testi.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public testi.ServiceReference1.CompositeType GetDataUsingDataContract(testi.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<testi.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(testi.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int DelCar(int carid) {
            return base.Channel.DelCar(carid);
        }
        
        public System.Threading.Tasks.Task<int> DelCarAsync(int carid) {
            return base.Channel.DelCarAsync(carid);
        }
        
        public int saveAutoIntoDatabase(testi.ServiceReference1.Auto newAuto) {
            return base.Channel.saveAutoIntoDatabase(newAuto);
        }
        
        public System.Threading.Tasks.Task<int> saveAutoIntoDatabaseAsync(testi.ServiceReference1.Auto newAuto) {
            return base.Channel.saveAutoIntoDatabaseAsync(newAuto);
        }
        
        public testi.ServiceReference1.Merkki[] getAllAutoMakersFromDatabase1() {
            return base.Channel.getAllAutoMakersFromDatabase1();
        }
        
        public System.Threading.Tasks.Task<testi.ServiceReference1.Merkki[]> getAllAutoMakersFromDatabase1Async() {
            return base.Channel.getAllAutoMakersFromDatabase1Async();
        }
        
        public testi.ServiceReference1.Malli[] getAutoModelsByMakerId(int makerId) {
            return base.Channel.getAutoModelsByMakerId(makerId);
        }
        
        public System.Threading.Tasks.Task<testi.ServiceReference1.Malli[]> getAutoModelsByMakerIdAsync(int makerId) {
            return base.Channel.getAutoModelsByMakerIdAsync(makerId);
        }
        
        public testi.ServiceReference1.polttoaine[] GetAutoFuels(int id) {
            return base.Channel.GetAutoFuels(id);
        }
        
        public System.Threading.Tasks.Task<testi.ServiceReference1.polttoaine[]> GetAutoFuelsAsync(int id) {
            return base.Channel.GetAutoFuelsAsync(id);
        }
        
        public testi.ServiceReference1.vari[] GetAutoColors() {
            return base.Channel.GetAutoColors();
        }
        
        public System.Threading.Tasks.Task<testi.ServiceReference1.vari[]> GetAutoColorsAsync() {
            return base.Channel.GetAutoColorsAsync();
        }
        
        public testi.ServiceReference1.Auto GetNextAuto(int carid) {
            return base.Channel.GetNextAuto(carid);
        }
        
        public System.Threading.Tasks.Task<testi.ServiceReference1.Auto> GetNextAutoAsync(int carid) {
            return base.Channel.GetNextAutoAsync(carid);
        }
        
        public int SetCount(int id) {
            return base.Channel.SetCount(id);
        }
        
        public System.Threading.Tasks.Task<int> SetCountAsync(int id) {
            return base.Channel.SetCountAsync(id);
        }
        
        public testi.ServiceReference1.Auto GetPrevious(int carid) {
            return base.Channel.GetPrevious(carid);
        }
        
        public System.Threading.Tasks.Task<testi.ServiceReference1.Auto> GetPreviousAsync(int carid) {
            return base.Channel.GetPreviousAsync(carid);
        }
    }
}
